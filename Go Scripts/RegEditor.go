// Kyhle Ohlinger
// GO Windows Registry Key Creator
// Prerequisits: Needs to be run from an elevated CMD shell

package main

//Registry Import
import "golang.org/x/sys/windows/registry"
//import "github.com/gen0cide/gscript/x/windows"
import (
	"fmt"
)

type error interface {
	Error() string
}

func check(err error){
	if err != nil {
		fmt.Printf(err.Error())
	}
}

func main(){
	fmt.Printf("== Windows Registry Key Creater ==\n\n")
	fmt.Printf("Adding Reg Key:\n===============================\n")

	//regInfo, err := registry.OpenKey(registry.LOCAL_MACHINE, `SOFTWARE\Microsoft\Windows Defender`, registry.QUERY_VALUE)
	//check(err)

	//err = regInfo.SetDWordValue("C:\\Windows\\Temp\\Evil.exe",0)
	//check(err)
	//defer regInfo.Close()
	winInfo, err := registry.OpenKey(registry.LOCAL_MACHINE, `SOFTWARE\Microsoft\Windows NT\CurrentVersion`, registry.QUERY_VALUE)
	check(err)
	defer winInfo.Close()

	CurrentVersion, _, err := winInfo.GetStringValue("CurrentVersion")
	check(err)

	fmt.Printf("Value: " + CurrentVersion +"\n")

	//err = windows.AddRegKeyString("LOCAL_MACHINE", "Software\\Microsoft\\Windows Defender\\Exclusions\\Paths", "Evil.exe", "C:\\Windows\\Temp");
	//check(err)
	//fmt.Printf("\nCompleted Adding Reg Key:\n===============================\n")

	regInfo, err := registry.OpenKey(registry.LOCAL_MACHINE, `SOFTWARE\Microsoft\Windows Defender`, registry.QUERY_VALUE)
	check(err)
	defer regInfo.Close()

	BackVersion, _, err := regInfo.GetStringValue("BackupLocation")
	//err = regInfo.SetDWordValue("C:\\Windows\\Temp\\Evil.exe",0)
	check(err)
	fmt.Printf("Value: " + BackVersion)
	return
}
