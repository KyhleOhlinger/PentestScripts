from neo4j import GraphDatabase

uri = "bolt://localhost:7687"
driver = GraphDatabase.driver(uri, auth=("<USERNAME>", "<PASSWORD>"))

ACLs = [
    "GenericWrite",
    "GenericAll",
    "ForceChangePassword",
    "Owns",
    "FullControl",
    "WriteDacl",
    "WriteOwner",
    "WriteProperty",
    "AllExtendedRights",
    "AddMember"
]

Objects = [
        "User",
        "Group",
        "Computer"
]

def print_acl(tx,acl,object,admin):
    for obj in range(len(Objects)):
        print(object +" Object ACLs with permissions over a "+Objects[obj]+" object:\n----------------------------------")
        for record in tx.run("MATCH (a:"+object+")-[:"+acl+"]->(u:"+Objects[obj]+") "+admin+" a.admincount RETURN a.name,COUNT(u.name),a.enabled"):
                print("Account: "+record["a.name"]+"\t : Accounts Affected = "+str(record["COUNT(u.name)"]) + "\t : Account Enabled = "+str(record["a.enabled"])+"\n")  

def main():
    with driver.session() as session:
        for obj in range(len(Objects)):
                print("================================================================")
                print("Checking "+Objects[obj]+" Permissions")
                print("================================================================")
                for i in range(len(ACLs)):
                        print("\n"+ACLs[i]+" with admincount = 0 \n-------------------------------")
                        session.read_transaction(print_acl,ACLs[i],Objects[obj],"WHERE NOT")
                        #print("\n"+ACLs[i]+" with admincount = 1 \n-------------------------------")
                        #session.read_transaction(print_acl,ACLs[i],"WHERE")
                print("================================================================")

print("\n============= Welcome to ACL_Checker =============\n")
main()
print("\n\n============= Checks Completed =============\n")
